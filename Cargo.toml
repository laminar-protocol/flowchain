[package]
name = "laminar-chain"
version = "0.0.1"
authors = ["Laminar Developers <hello@laminar.one>"]
build = "build.rs"
edition = "2018"

[profile.release]
panic = "unwind"

[[bin]]
name = "laminar"
path = "src/main.rs"

[[test]]
name = "cucumber"
harness = false # Allows Cucumber to print output instead of libtest

[dependencies]
codec = { package = "parity-scale-codec", version = "1.3.0" }
futures = "0.3.1"
hex-literal = "0.2.1"
jsonrpc-core = "14.0.5"
log = "0.4.8"
parity-util-mem = { version = "0.5.1", default-features = false, features = ["jemalloc-global"] }
serde = { version = "1.0.102", features = ["derive"] }
serde_json = "1.0.41"
structopt = "0.3.8"

pallet-transaction-payment-rpc = { version = "2.0.0-alpha.6" }
sc-authority-discovery = { version = "0.8.0-alpha.6" }
sc-basic-authorship = { version = "0.8.0-alpha.6"}
sc-chain-spec = { version = "2.0.0-alpha.6" }
sc-cli = { version = "0.8.0-alpha.6" }
sc-client = { version = "0.8.0-alpha.6" }
sc-client-api = { version = "2.0.0-alpha.6" }
sc-consensus-babe = { version = "0.8.0-alpha.6" }
sc-consensus-babe-rpc = { version = "0.8.0-alpha.6" }
sc-consensus-epochs = { version = "0.8.0-alpha.6" }
sc-executor = { version = "0.8.0-alpha.6" }
sc-finality-grandpa = { version = "0.8.0-alpha.6" }
sc-keystore = { version = "2.0.0-alpha.6" }
sc-network = { version = "0.8.0-alpha.6" }
sc-offchain = { version = "2.0.0-alpha.6" }
sc-rpc = { version = "2.0.0-alpha.6" }
sc-service = { version = "0.8.0-alpha.6" }
sc-telemetry = { version = "2.0.0-alpha.6" }
sc-transaction-pool = { version = "2.0.0-alpha.6" }
sp-api = { version = "2.0.0-alpha.6" }
sp-consensus = { version = "0.8.0-alpha.6" }
sp-consensus-babe = { version = "0.8.0-alpha.6" }
sp-core = { version = "2.0.0-alpha.6" }
sp-finality-grandpa = { version = "2.0.0-alpha.6" }
sp-inherents = { version = "2.0.0-alpha.6" }
sp-io = { version = "2.0.0-alpha.6" }
sp-runtime = { version = "2.0.0-alpha.6" }
sp-transaction-pool = { version = "2.0.0-alpha.6" }
sp-std = { version = "2.0.0-alpha.6" }
sp-arithmetic = { version = "2.0.0-alpha.6" }
substrate-frame-rpc-system = { version = "2.0.0-alpha.6" }
frame-benchmarking-cli = { version = "2.0.0-alpha.6" }

margin-protocol = { package = "module-margin-protocol", path = "modules/margin-protocol"}
margin-protocol-rpc = { path = "modules/margin-protocol/rpc" }
margin-liquidity-pools = { package = "module-margin-liquidity-pools", path = "modules/liquidity-pools/margin" }
synthetic-protocol-rpc = { path = "modules/synthetic-protocol/rpc" }
orml-oracle-rpc = { path = "orml/oracle/rpc" }
orml-utilities = { path = "orml/utilities" }
module-primitives = { path = "./modules/primitives" }
runtime = { package = "laminar-runtime", path = "runtime" }
inspect = { package = "laminar-inspect", path = "inspect" }

[dev-dependencies]
cucumber = { package = "cucumber_rust", version = "^0.6.0" }
frame-support = { version = "2.0.0-alpha.6" }

[build-dependencies]
build-script-utils = { package = "substrate-build-script-utils", version = "2.0.0-alpha.6" }

[features]
default = ["wasmtime"]
wasmtime = [ "sc-cli/wasmtime" ]
runtime-benchmarks = [
	"runtime/runtime-benchmarks",
]

[workspace]
members = [
	"modules/primitives",
	"modules/synthetic-tokens",
	"modules/synthetic-protocol",
	"modules/margin-protocol",
	"modules/liquidity-pools/*",
	"orml/auction",
	"orml/currencies",
	"orml/gradually-update",
	"orml/oracle",
	"orml/prices",
	"orml/tokens",
	"orml/traits",
	"orml/utilities",
	"orml/vesting",
	"runtime",
	"inspect",
	"orml/schedule-update",
	"orml/gradually-update",
]
exclude = [ "runtime/wasm" ]
